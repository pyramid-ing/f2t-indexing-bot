generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// 전역 앱 설정 (기존 유지)
model Settings {
  id          Int      @id @default(autoincrement())
  data      String    // JSON: { appVersion, initialized, setupCompleted, theme, language }
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

// 네이버 계정 관리 모델 (재추가 - 중앙 관리)
model NaverAccount {
  id          Int      @id @default(autoincrement())
  naverId     String
  password    String
  name        String
  isActive    Boolean   @default(true)
  isLoggedIn  Boolean   @default(false)
  lastLogin   DateTime  @default(now())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  siteId      Int
  accessToken String?
  site        Site      @relation(fields: [siteId], references: [id])

  @@unique([naverId])
}

// 사이트별 설정 모델 (확장됨)
model Site {
  id          Int      @id @default(autoincrement())
  name          String        // 사이트 표시명 (예: "내 블로그", "회사 홈페이지")
  domain        String        @unique // 사이트 도메인 (예: "example.com")
  siteUrl       String              // 전체 URL (예: https://example.com)
  description   String?
  isActive      Boolean       @default(true) // 활성화 여부
  
  // 검색엔진별 설정 (JSON 형태로 저장)
  googleConfig  String        @default("{}")   // Google 설정
  naverConfig   String        @default("{}")   // Naver 설정  
  daumConfig    String        @default("{}")   // Daum 설정
  bingConfig    String        @default("{}")   // Bing 설정
  
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  indexJobs     IndexJob[]
  naverAccounts NaverAccount[]
}

// 기본 Job 모델
model Job {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  status    String    @default("pending") // pending, in_progress, completed, failed, cancelled
  type      String    // index, blog_post
  data      String    // JSON string
  resultMsg String?
  errorMsg String?
  logs      JobLog[]
  indexJob  IndexJob?
}

model JobLog {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  jobId     String
  message   String
  level     String    @default("info") // info, error
  job       Job       @relation(fields: [jobId], references: [id])
}

// 블로그 작업 모델
model IndexJob {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  url       String
  provider  String    // 'GOOGLE' | 'NAVER' | 'DAUM' | 'BING'
  jobId     String    @unique
  siteId    Int
  site      Site      @relation(fields: [siteId], references: [id])
  job       Job       @relation(fields: [jobId], references: [id])

  @@index([siteId])
}
